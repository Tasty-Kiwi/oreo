package value

import (
	"bytes"
	"testing"

	"github.com/stretchr/testify/assert"
)

func TestIdempotency(t *testing.T) {
	b := []byte{4, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 108, 100, 4, 1, 0, 0, 0, 0, 0, 0, 0, 26, 0, 0,
		0, 47, 119, 101, 98, 47, 55, 105, 55, 74, 99, 49, 48, 74, 88, 49, 54, 70, 107, 90, 117, 55, 71,
		90, 70, 120, 112, 4, 5, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 108, 110, 3, 40, 0, 0, 0, 35, 102, 102,
		102, 102, 48, 48, 102, 102, 83, 97, 109, 112, 108, 101, 58, 32, 35, 102, 102, 102, 102, 102, 102,
		102, 102, 65, 100, 118, 97, 110, 99, 101, 100, 32, 108, 101, 118, 101, 108, 2, 0, 0, 0, 109, 100,
		2, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 112, 99, 2, 5, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 115, 115, 2,
		119, 16, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 116, 112, 2, 64, 6, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 114, 101,
		112, 5, 7, 0, 0, 0, 0, 0, 0, 0, 5, 2, 0, 0, 0, 0, 0, 0, 0, 3, 12, 0, 0, 0, 121, 109, 72, 110, 74, 81,
		67, 102, 80, 113, 103, 97, 2, 2, 0, 0, 0, 0, 0, 0, 0, 5, 2, 0, 0, 0, 0, 0, 0, 0, 3, 12, 0, 0, 0, 51, 81, 100,
		81, 120, 72, 51, 52, 82, 56, 83, 110, 2, 2, 0, 0, 0, 0, 0, 0, 0, 5, 2, 0, 0, 0, 0, 0, 0, 0, 3, 12, 0, 0, 0, 71, 109, 57,
		99, 68, 68, 79, 107, 65, 117, 72, 98, 2, 2, 0, 0, 0, 0, 0, 0, 0, 5, 2, 0, 0, 0, 0, 0, 0, 0, 3, 12, 0, 0, 0, 50, 86, 74,
		121, 56, 105, 51, 55, 116, 120, 45, 117, 2, 5, 0, 0, 0, 0, 0, 0, 0, 5, 2, 0, 0, 0, 0, 0, 0, 0, 3, 12, 0, 0, 0, 104, 104,
		89, 67, 122, 52, 111, 109, 49, 70, 71, 69, 2, 20, 0, 0, 0, 0, 0, 0, 0, 5, 2, 0, 0, 0, 0, 0, 0, 0, 3, 12, 0, 0, 0, 76, 105,
		50, 85, 114, 71, 67, 66, 117, 70, 90, 114, 2, 1, 0, 0, 0, 0, 0, 0, 0, 5, 2, 0, 0, 0, 0, 0, 0, 0, 3, 12, 0, 0, 0, 101, 81, 88,
		54, 90, 105, 67, 80, 70, 103, 100, 113, 2, 1, 0, 0, 0, 0, 0, 0, 0,
	}

	// In this test, we can't just compare buffers, because go may re-order the map values,
	// so we need to compare the maps themselves, hence the two calls to `DeserializeInterface`.
	var buf bytes.Buffer
	buf.Write(b)
	initialValue, err1 := DeserializeInterface(&buf)
	assert.Equal(t, nil, err1)

	var newBuffer bytes.Buffer
	SerializeInterface(initialValue, &newBuffer)

	newValue, err2 := DeserializeInterface(&newBuffer)
	assert.Equal(t, nil, err2)

	assert.Equal(t, initialValue, newValue)
}
